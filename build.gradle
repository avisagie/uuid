apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'

def git_tag() {
    def os = new ByteArrayOutputStream()
    exec {
    	commandLine = ['git', 'describe', '--tags', '--abbrev=0']
	standardOutput = os
    }
    return os.toString().trim()
}

def git_count(tag) {
    def os = new ByteArrayOutputStream()
    exec {
    	commandLine = ['git', 'rev-list', '--count', tag + '..HEAD']
	standardOutput = os
    }
    return os.toString().trim()
}

def git_version() {    
    def tag = git_tag()
    def count = git_count(tag)
    return tag + '.' + count
}

group = 'com.github.avisagie'
version = git_version()
repositories {
    mavenCentral()
}
dependencies {
    testCompile "junit:junit:4.12"
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type:Jar){
    from sourceSets.main.allSource
    classifier = 'source'
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
	mavenDeployer {
	    beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
	    
	    repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
		authentication(userName: ossrhUsername, password: ossrhPassword)
	    }
	    
	    snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
		authentication(userName: ossrhUsername, password: ossrhPassword)
	    }
	    
	    pom.project {
		name 'UUID'
		packaging 'jar'
		// optionally artifactId can be defined here 
		description "Java UUID generators. Random UUIDv4 and a special epoch UUID for datastores that like 'em roughly clustered in insert order."
		url 'https://github.com/avisagie/uuid'
		
		scm {
		    connection 'scm:git:https://github.com/avisagie/uuid.git'
		    developerConnection 'scm:git:git@github.com:avisagie/uuid.git'
		    url 'https://github.com/avisagie/uuid'
		}
		
		licenses {
		    license {
			name 'The MIT License (MIT)'
			url 'https://opensource.org/licenses/MIT'
		    }
		}
		
		developers {
		    developer {
			id 'avisagie'
			name 'Albert Visagie'
			email 'avisagie@gmail.com'
		    }
		}
	    }
	}
    }
}

task bench(type:JavaExec) {
    main = 'asv.uuid.BenchmarkGenerator'
    classpath = sourceSets.test.runtimeClasspath
}

